[{"pk": 1, "model": "mainsite.project", "fields": {"name": "Riker Ipsum", "long_description": "<p>Generates random text using real English - taken from random samplings of the entire catalog of dialog spoken by Commander William Riker in every episode of Star Trek: The Next Generation.</p><p>Useful for provisioning sample data to test a DB, or creating filler text for a design.</p><p>Since the entire catalog of dialog from every episode is included, endless possibilites of gibberish can be expected.</p>", "src_url": "https://github.com/ben174/rikeripsum", "short_description": "Generates text - like lorem ipsum - but uses real English. Taken from random samplings of dialog spoken by Commander William Riker in Star Trek: The Next Generation", "sort_order": 1.0, "deployment_url": "http://ben174.github.io/rikeripsum/"}}, {"pk": 2, "model": "mainsite.project", "fields": {"name": "MyTush", "long_description": "<p>The intent of this utility is to make it easy to send web points from a phone to MyFord Touch (Sync). Currently they have a app that is supposed to do this called Sync Destinations. But it's horrible. The map data it uses is bad and they should feel bad. This allows me to use my native Maps application and just share the point. I email it to an email address, and this script checks that mail address at a regular interval. When it sees a new message, it grabs the map point (VCF file), parses it, then sends it to the web service.</p><p>This utility:</p><ul><li>Checks email on the account</li><li>Looks for emails containing a VCF file.</li><li>Parses the VCF file for geographical data.</li><li>Sends that data to the MyFord Touch web service.</li><li>Deletes ALL MAIL from the mailbox.</li></ul>", "src_url": "https://github.com/ben174/mytush", "short_description": "A utility to read map points from email attachments and push them to MyFord Touch / SYNC services.", "sort_order": 4.0, "deployment_url": "https://github.com/ben174/mytush"}}, {"pk": 3, "model": "mainsite.project", "fields": {"name": "My Resume", "long_description": "<p>My resume itself was a project of its own. Written in Python/Django - it makes it way easier to maintain my profile. And since all the data is stored in a database - it is easy to export my resume in any format.</p> <p>I have released the source on GitHub for anyone to view and/or use.</p>", "src_url": "https://github.com/ben174/bugben", "short_description": "A Django project which hosts my resume.", "sort_order": 3.0, "deployment_url": "http://www.bugben.com"}}, {"pk": 4, "model": "mainsite.project", "fields": {"name": "A&G Calendar", "long_description": "Listeners of the popular radio show \"The Armstrong and Getty Show\" were constantly having trouble finding episodes of the podcast available online. There was no clean and easy way to find episodes. I made this site as an attempt to simplify navigation and make episodes easily searchable. ", "src_url": "https://github.com/ben174/angrates", "short_description": "A podcast calendar for listeners to have a resource for finding episodes of my favorite radio show.", "sort_order": 2.0, "deployment_url": "http://www.armstrongandgettybingo.com/"}}, {"pk": 5, "model": "mainsite.project", "fields": {"name": "Profanity", "long_description": "This library was designed to be an easy way to check text for inappropriate content. It includes a basic word list and can be used with custom word lists.\r\n\r\nThis package has been submitted to PyPI and can be installed with a simple: pip install profanity", "src_url": "http://www.github.com/ben174/profanity", "short_description": "A library to check for (and censor) profanity in text strings.", "sort_order": 1.5, "deployment_url": "http://ben174.github.io/profanity/"}}, {"pk": 6, "model": "mainsite.project", "fields": {"name": "Home Control", "long_description": "Parses your voice and executes commands based on input.\r\n\r\nSome commands it understands:\r\n\r\n'Turn office lights on'\r\n'Turn the house red.'\r\n'Turn upstairs lights blue.'\r\n'Set temperature to 68'\r\n'Turn living room into a rainbow.'\r\n'Set staircase brightness to 5.' (1-10 scale)\r\n", "src_url": "http://www.github.com/ben174/homecontrol", "short_description": "An application for home automation", "sort_order": 1.1000000000000001, "deployment_url": "http://www.github.com/ben174/homecontrol"}}, {"pk": 7, "model": "mainsite.project", "fields": {"name": "PyDvorak", "long_description": "A console application written in Python to help teach me to type in Dvorak - which is an alternative to the Qwerty keymap.", "src_url": "https://github.com/ben174/pydvorak", "short_description": "A Python curses application to help teach the Dvorak keymap.", "sort_order": 1.3, "deployment_url": "https://github.com/ben174/pydvorak"}}, {"pk": 8, "model": "mainsite.project", "fields": {"name": "Shower Texts", "long_description": "A web application which allows users to sign up and receive a daily bit of inspiration from Reddit's ShowerThoughts subreddit. Pulls the top post of the day and sends it to all subscribers.\r\n\r\nFeatured in Wired Magazine's Gear section:\r\n\r\nhttp://www.wired.com/2015/08/4-new-apps-use-shower-texts-bar-roulette/", "src_url": "https://github.com/ben174/showertexts", "short_description": "A service to send a daily Shower Thought to your phone.", "sort_order": 1.2, "deployment_url": "http://www.showertexts.com/"}},{"pk": 9, "model": "mainsite.project", "fields": {"name": "HSTS Super Cookie", "long_description": "HTTP Strict Transport Security (HSTS) is a web security standard implemented by browsers via a Response header which instructs the browser to send subsequent requests to this particular URL over HTTPS, even if the original request was made using HTTP. When a browser receives a HSTS instruction, that instruction is retained no matter what. Even if you go incognito or private. This is a proof of concept self-hosted application which will lay a 'super cookie' using the HSTS web standard.", "src_url": "https://github.com/ben174/hsts-cookie", "short_description": "Creates a HSTS Supercookie to fingerprint a browser", "sort_order": 0.2, "deployment_url": "https://github.com/ben174/hsts-cookie"}}]
